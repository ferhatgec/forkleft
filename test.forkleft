~= Forkleft example

~= ~html~ initializer to
~= use directly html code in forkleft.
~=
~= code ~html~ := -> '
~=    <title>Forkleft better</title>
~= ' <-

~= Forkleft equivalent of <title>...</title>
title := 'Forkleft better'

h1 := 'hello, h1'
h2 := 'hello, h2'
h3 := 'hello, h3'
h4 := 'hello, h4'
h5 := 'hello, h5'
h6 := 'hello, h6'

~= ~...~ is initializer for previous keyword.

sign ~newline~ := @copyright@
sign ~newline~ := @registered@
sign ~newline~ := @trade-mark@
sign ~newline~ := @section@

sign ~newline~ := @plus-minus@

text ~newline~ := 'hello, text (aka label)'
label ~newline~ := 'hello, label (aka text)'

bold ~newline~ := 'hello, bold'
italic ~newline~ := 'hello, italic'
blockquote ~newline~ := 'hello, blockquote'

code ~inline~ := 'std::cout << "hello, code\n";'

strikethrough := 'markdown is best'

link @= ->
    [data
        =path 'https://github.com/ferhatgec/forkleft'
        =text 'Forkleft source code [GitHub]'
    ]
<-

image @= ->
    [data
        =path 'https://octodex.github.com/images/manufacturetocat.png'
        =text 'Octocat lol'
    ]
<-

~= Syntax will be like this (preferred, work-in-progress)
~=
~= list ~unordered~ := 'Hi!' ->
~=     child := 'hello, world'
~=     child := 'hello, world' ->
~=         child := 'hello, world!'
~=     <-
~= <-
~=
~=   list ~ordered~ := 'Hi!' ->
~=     child := 'Hello, world!'
~=       child := 'hello, world?!' ->
~=           child := 'hello, world!'
~=       <-
~=   <-
~=
~=   task ~ok~ := 'hello, world!' ->
~=       italic := 'huhuuu'
~=   <-
~=   code ~markdown~ := '# Hello, world!'
~=